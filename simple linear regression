import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split 
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score
dataset = pd.read_csv('salary_data.csv')
X=dataset.iloc[:,:-1].values
y=dataset.iloc[:,-1].values
print(dataset.head())

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=1/3, random_state=0)

regressor = LinearRegression()
regressor.fit(X_train, y_train)

plt.scatter(X_train, y_train, color='red', label='Actual')
plt.plot(X_train, regressor.predict(X_train), color='blue', label='Predicted')
plt.title('Salary VS Experience (Training set)')
plt.xlabel('Year of Experience')
plt.ylabel('Salary')
plt.legend()
plt.show()

plt.scatter(X_test, y_test, color='red', label='Actual')
plt.plot(X_test, regressor.predict(X_test), color='blue', label='Predicted')
plt.title('Salary VS Experience (Test set)')
plt.xlabel('Year of Experience')
plt.ylabel('Salary')
plt.legend()
plt.show()


y_pred=regressor.predict(X_test)
y_pred

mse=mean_squared_error(y_test,y_pred)
rmse=np.sqrt(mse)
mae=mean_absolute_error(y_test,y_pred)
r2=r2_score(y_test,y_pred)

print("Mean Squared Error:",mse)
print("Root Mean Squared Error:",rmse)
print("Mean squared error:",mae)
print("R-squared:",r2)

new_input=[[5]]
y_pred=regressor.predict(new_input)
print("Predicted salary:",y_pred)
